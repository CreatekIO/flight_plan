---
version: 2
jobs:
  build:
    docker:
      - image: createkio/flight_plan:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        environment:
          DB_HOST: 127.0.0.1
          DB_USERNAME: postgres
          DB_PASSWORD: password
          DISABLE_SPRING: 1
          RAILS_ENV: test
      - image: postgres:12.6-alpine
        environment:
          POSTGRES_PASSWORD: password
      - image: redis:5.0-alpine

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: >
            if [ -z "$(which chromium-browser)" ]; then
              apk add \
                --no-cache \
                --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community \
                chromium
            fi
      - run:
          name: Bundle Install
          command: |
            bundle install \
            --jobs "$(getconf _NPROCESSORS_ONLN)" \
            --retry 2 \
            --without development
      - run:
          name: Yarn Install
          command: yarn install --ignore-engines
      - run:
          name: Database setup
          command: >
            retries=5

            until nc -z $DB_HOST:5432; do
              retries="$(("$retries" - 1))"

              if [ "$retries" -eq 0 ]; then
                echo "Failed to reach PostgreSQL" >&2
                exit 1
              fi

              sleep 5
              echo "Waiting for PostgreSQL ($retries retries left)"
            done

            bin/rake db:reset
      - run:
          name: Build packs for system specs
          command: bin/rake webpacker:compile
      - run:
          name: Determine spec files
          command: >
            circleci tests glob "spec/**/*_spec.rb" | circleci tests split | tee tests.txt
      - run:
          name: Run Specs
          environment:
            DISABLE_SPRING: 1
          command: >
            cat tests.txt | xargs bin/rspec \
              --tag ~js \
              --require rspec_junit_formatter \
              --format RspecJunitFormatter --out tmp/test-results/rspec/results.xml \
              --format documentation
      - run:
          name: Run JS System Specs
          environment:
            DISABLE_SPRING: 1
            FERRUM_PROCESS_TIMEOUT: 10
            FERRUM_DEFAULT_TIMEOUT: 20
          no_output_timeout: '5m'
          command: >
            cat tests.txt | xargs bin/rspec \
              --tag js \
              --require rspec_junit_formatter \
              --format RspecJunitFormatter --out tmp/test-results/rspec-system/results.xml \
              --format documentation
      - store_artifacts:
          path: log
          destination: log
      - store_artifacts:
          path: tmp/capybara
          destination: capybara
      - store_artifacts:
          path: tmp/screenshots
          destination: screenshots
      - store_artifacts:
          path: tmp/rspec
          destination: rspec
      - store_test_results:
          path: tmp/test-results
      - add_ssh_keys:
          fingerprints:
            - 'ab:68:2e:b6:40:01:25:79:e0:70:ba:95:ef:f7:98:85'
      - deploy:
          name: Deploy to Heroku (master only)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                sh .circleci/setup_heroku.sh

                git push --force git@heroku.com:flight-plan-createk.git HEAD:refs/heads/master
            fi

