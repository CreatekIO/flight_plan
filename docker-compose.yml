version: '3'
services:
  lb:
    image: traefik:1.7.3
    command: --api --docker
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./tools/traefik/traefik.toml:/traefik.toml
      - ./tools/ssl_certs:/ssl_certs

  app:
    image: createkio/flight_plan:latest
    command: sh -c '
      rm -f /flight_plan/tmp/pids/server.pid &&
      bundle &&
      if [ "$BYEBUG" -eq "1" ]; then sleep 100d; else bin/rails s; fi
      '
    volumes:
      - .:/flight_plan
      - gems:/usr/local/bundle
      - node_modules:/flight_plan/node_modules
    depends_on:
      - db
      - redis
    expose:
      - 3000
    environment:
      - REDIS_URL=redis://redis:6379
      - DB_HOST=db
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - WEBPACKER_DEV_SERVER_HOST=webpack
      - WEBPACKER_DEV_SERVER_PORT=443
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:dev.createk.io
      - traefik.port=3000
      - traefik.protocol=http
      - traefik.frontend.priority=10
    env_file:
      - .env

  db:
    image: postgres:12.2-alpine
    environment:
      POSTGRES_PASSWORD: 'password'
    ports:
      - 5432:5432
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  webpack:
    image: createkio/flight_plan:latest
    command: >
      sh -c '
        yarn install --ignore-engines &&

        if [ "$DEBUGGER" -eq "1" ]; then
          sleep 100d;
        else
          ./bin/webpack-dev-server
        fi
      '
    volumes:
      - .:/flight_plan
      - gems:/usr/local/bundle
      - node_modules:/flight_plan/node_modules
    expose:
      - 3035
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:webpack.dev.createk.io
      - traefik.port=3035
      - traefik.protocol=http
      - traefik.frontend.priority=100

  redis:
    image: redis:3.2

  sidekiq:
    image: createkio/flight_plan:latest
    command: sh -c 'bundle exec sidekiq'
    volumes:
      - .:/flight_plan
      - gems:/usr/local/bundle
    depends_on:
      - db
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
      - DB_HOST=db
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
    env_file:
      - .env

volumes:
  postgresql_data:
  gems:
  node_modules:
